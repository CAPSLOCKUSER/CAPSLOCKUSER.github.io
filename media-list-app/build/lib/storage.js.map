{"version":3,"sources":["../../js/lib/storage.js"],"names":[],"mappings":";;AAAA,OAAO,YAAM;;AAEX,WAAS,MAAT,CAAgB,OAAhB,EAAyB,SAAzB,EAAoC;AAClC,QAAI,cAAJ;AACA,QAAI,YAAY,EAAhB;;AAEA,QAAM,WAAW,SAAX,QAAW;AAAA,aAAM,KAAN;AAAA,KAAjB;;AAEA,QAAM,WAAW,SAAX,QAAW,CAAC,MAAD,EAAY;AAC3B,cAAQ,QAAQ,KAAR,EAAe,MAAf,CAAR;AACA,gBAAU,KAAV;AACA,gBAAU,OAAV,CAAkB;AAAA,eAAY,UAAZ;AAAA,OAAlB;AACD,KAJD;;AAMA,QAAM,YAAY,SAAZ,SAAY,CAAC,QAAD,EAAc;AAC9B,gBAAU,IAAV,CAAe,QAAf;AACA,aAAO,YAAM;AACX,oBAAY,UAAU,MAAV,CAAiB;AAAA,iBAAK,MAAM,QAAX;AAAA,SAAjB,CAAZ;AACD,OAFD;AAGD,KALD;;AAOA,aAAS,EAAT;;AAEA,WAAO,EAAE,kBAAF,EAAY,kBAAZ,EAAsB,oBAAtB,EAAP;AACD;;AAED,SAAO;AACL;AADK,GAAP;AAGD,CA7BD","file":"storage.js","sourcesContent":["define(() => {\n\n  function create(reducer, saveState) {\n    let state;\n    let listeners = [];\n\n    const getState = () => state;\n\n    const dispatch = (action) => {\n      state = reducer(state, action);\n      saveState(state);\n      listeners.forEach(listener => listener());\n    };\n\n    const subscribe = (listener) => {\n      listeners.push(listener);\n      return () => {\n        listeners = listeners.filter(l => l !== listener);\n      };\n    };\n\n    dispatch({});\n\n    return { getState, dispatch, subscribe };\n  }\n\n  return {\n    create,\n  };\n});\n"]}