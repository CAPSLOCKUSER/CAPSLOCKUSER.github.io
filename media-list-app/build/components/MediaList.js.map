{"version":3,"sources":["../../js/components/MediaList.js"],"names":[],"mappings":";;;;;;;;;;;;AAAA,OAAO,CACL,iBADK,EAEL,sBAFK,CAAP,EAGG,UAAC,UAAD,EAAa,SAAb,EAA2B;AAAA,MAEtB,SAFsB;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,+BAGjB;AAAA,qBACgE,KAAK,KADrE;AAAA,YACC,IADD,UACC,IADD;AAAA,YACO,MADP,UACO,MADP;AAAA,YACe,MADf,UACe,MADf;AAAA,YACuB,aADvB,UACuB,aADvB;AAAA,YACsC,SADtC,UACsC,SADtC;AAAA,YACiD,UADjD,UACiD,UADjD;;AAEP,YAAM,cAAc,eAAe,WAAnC;;AAEA,YAAM,kBAAkB,SAAlB,eAAkB,OAA0B;AAAA,cAAvB,IAAuB,QAAvB,IAAuB;AAAA,cAAjB,MAAiB,QAAjB,MAAiB;AAAA,cAAT,EAAS,QAAT,EAAS;;AAChD,cAAM,aAAa,CAAC,WAAD,GAAe,MAAf,GAAwB,WAA3C;AACA,kBAAQ,UAAR;AACE,iBAAK,cAAL;AACE,qBAAO,UAAU,SAAS,SAA1B;AACF,iBAAK,iBAAL;AACE,qBAAO,CAAC,MAAD,IAAW,SAAS,SAA3B;AACF,iBAAK,OAAL;AACE,qBAAO,SAAS,UAAhB;AACF,iBAAK,WAAL;AACE,qBAAO,CAAC,CAAC,kBAAkB,EAAlB,CAAT;AACF;AACE,qBAAO,IAAP;AAVJ;AAYD,SAdD;;AAgBA,YAAM,oBAAoB,SAApB,iBAAoB,KAAM;AAC9B,iBAAO,UAAU,IAAV,CAAe;AAAA,gBAAO,KAAP,SAAG,EAAH;AAAA,mBAAmB,UAAU,EAA7B;AAAA,WAAf,CAAP;AACD,SAFD;;AAIA,YAAM,2BAA2B,SAA3B,wBAA2B,CAAC,CAAD,EAAI,CAAJ,EAAU;AACzC,cAAM,SAAS,kBAAkB,EAAE,EAApB,EAAwB,IAAvC;AACA,cAAM,SAAS,kBAAkB,EAAE,EAApB,EAAwB,IAAvC;;AAEA,iBAAO,SAAS,MAAhB;AACD,SALD;;AAOA,YAAM,gBAAgB,SAAhB,aAAgB,CAAC,CAAD,EAAI,CAAJ,EAAU;;AAE9B,cAAI,EAAE,MAAF,MAAc,EAAE,MAAF,CAAlB,EAA6B;AAC3B,mBAAO,EAAE,EAAF,GAAO,EAAE,EAAhB;AACD;;AAED,cAAM,QAAQ,EAAE,MAAF,IAAY,EAAE,MAAF,CAAZ,GAAwB,CAAC,CAAzB,GAA6B,CAA3C;;AAEA,iBAAO,kBAAkB,KAAlB,GAA0B,KAA1B,GAAkC,CAAC,KAA1C;AACD,SATD;;AAWA,YAAM,QAAQ,KACX,MADW,CACJ,eADI,EAEX,IAFW,CAEN,eAAe,WAAf,GAA6B,wBAA7B,GAAwD,aAFlD,EAGX,GAHW,CAGP;AAAA,iBAAQ,gBAAC,SAAD,eAAe,IAAf,IAAqB,WAAW,SAAhC,IAAR;AAAA,SAHO,CAAd;;AAKA,eACE;AAAA;AAAA,YAAI,SAAM,YAAV;AACG,gBAAM,MAAN,KAAiB,CAAjB,GACC;AAAA;AAAA,cAAI,SAAM,YAAV;AACG,0BAAc,0BAAd,GAA2C;AAD9C,WADD,GAIG;AALN,SADF;AASD;AA3DyB;;AAAA;AAAA,IAEJ,WAAW,SAFP;;AA8D5B,SAAO,SAAP;AACD,CAlED","file":"MediaList.js","sourcesContent":["define([\n  'lib/virtual-dom',\n  'components/MediaItem'\n], (VirtualDom, MediaItem) => {\n\n  class MediaList extends VirtualDom.Component {\n    render() {\n      const { list, filter, sortBy, sortDirection, watchlist, browseMode } = this.props;\n      const isWatchlist = browseMode === 'watchlist';\n\n      const filterMediaItem = ({ type, isLive, id }) => {\n        const filterMode = !isWatchlist ? filter : 'watchlist';\n        switch (filterMode) {\n          case 'live-channel':\n            return isLive && type === 'channel';\n          case 'offline-channel':\n            return !isLive && type === 'channel';\n          case 'video':\n            return type === 'recorded';\n          case 'watchlist':\n            return !!findWatchlistItem(id);\n          default:\n            return true;\n        }\n      };\n\n      const findWatchlistItem = id => {\n        return watchlist.find(({ id: other }) => other === id);\n      };\n\n      const sortByWatchlistAddedDate = (a, b) => {\n        const addedA = findWatchlistItem(a.id).date;\n        const addedB = findWatchlistItem(b.id).date;\n\n        return addedB - addedA;\n      };\n\n      const sortMediaItem = (a, b) => {\n        // makes stable sort\n        if (a[sortBy] === b[sortBy]) {\n          return a.id - b.id;\n        }\n\n        const local = a[sortBy] < b[sortBy] ? -1 : 1;\n\n        return sortDirection === 'asc' ? local : -local;\n      };\n\n      const items = list\n        .filter(filterMediaItem)\n        .sort(browseMode === 'watchlist' ? sortByWatchlistAddedDate : sortMediaItem)\n        .map(item => <MediaItem {...item} watchlist={watchlist} />);\n\n      return (\n        <ul class=\"media-list\">\n          {items.length === 0 ? (\n            <li class=\"media-item\">\n              {isWatchlist ? 'Your watchlist is empty!' : 'Loading...'}\n            </li>\n          ) : items}\n        </ul>\n      );\n    }\n  }\n\n  return MediaList;\n});\n"]}