{"version":3,"sources":["../../js/components/Sorter.js"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,CACL,QADK,EAEL,WAFK,EAGL,iBAHK,EAIL,cAJK,EAKL,oBALK,EAML,WANK,CAAP,EAOG,UAAC,CAAD,QAA6B,UAA7B,EAAyC,KAAzC,gBAAsF;AAAA,MAAhF,mBAAgF,QAAhF,mBAAgF;AAAA,MAApC,aAAoC,SAApC,aAAoC;AAAA,MAAjB,UAAiB,SAAjB,UAAiB;;AAAA,MAEjF,MAFiF;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,2CAShE;AACnB,YAAM,QAAQ,EAAE,KAAK,IAAP,CAAd;AACA,cAAM,EAAN,CAAS,QAAT,EAAmB,YAAM;AACvB,cAAM,SAAS,MAAM,IAAN,CAAW,gBAAX,EAA6B,GAA7B,EAAf;AACA,cAAM,gBAAgB,MAAM,IAAN,CAAW,iCAAX,EAA8C,GAA9C,EAAtB;AACA,gBAAM,QAAN,CAAe,cAAc,MAAd,EAAsB,aAAtB,CAAf;AACD,SAJD;AAKD;AAhBoF;AAAA;AAAA,8CAkB7D;AAAE,eAAO,KAAP;AAAe;AAlB4C;AAAA;AAAA,+BAoB5E;AAAA,qBAC2B,KAAK,KADhC;AAAA,YACC,MADD,UACC,MADD;AAAA,YACS,aADT,UACS,aADT;;AAEP,YAAM,UAAU,oBAAoB,GAApB,CAAwB;AAAA,iBACtC;AAAA;AAAA,cAAQ,OAAO,IAAf,EAAqB,UAAU,WAAW,IAA1C;AACG,iBAAK,MAAL,IAAc,CAAd,GAAkB,KAAK,WAAL,EAAlB,GAAuC,WAAW,IAAX;AAD1C,WADsC;AAAA,SAAxB,CAAhB;AAKA,eACE;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAA,WADF;AAEE;AAAA;AAAA,cAAQ,MAAK,eAAb,EAA6B,IAAG,eAAhC;AACG;AADH,WAFF;AAKE;AAAA;AAAA,cAAK,SAAM,gBAAX;AACE;AAAA;AAAA;AACE;AACE,sBAAK,OADP;AAEE,sBAAK,gBAFP;AAGE,uBAAM,KAHR;AAIE,yBAAS,kBAAkB;AAJ7B,gBADF;AAOE,qCAAG,SAAM,kBAAT,EAA4B,eAAY,MAAxC;AAPF,aADF;AAUE;AAAA;AAAA;AACE;AACE,sBAAK,OADP;AAEE,sBAAK,gBAFP;AAGE,uBAAM,MAHR;AAIE,yBAAS,kBAAkB;AAJ7B,gBADF;AAOE,qCAAG,SAAM,oBAAT,EAA8B,eAAY,MAA1C;AAPF;AAVF;AALF,SADF;AA4BD;AAvDoF;;AAAA;AAAA,IAElE,WAAW,SAFuD;;AAEjF,QAFiF,CAI9E,YAJ8E,GAI/D;AACpB,YAAQ,IADY;AAEpB,mBAAe;AAFK,GAJ+D;;;AA0DvF,SAAO,MAAP;AACD,CAlED","file":"Sorter.js","sourcesContent":["define([\n  'jquery',\n  'constants',\n  'lib/virtual-dom',\n  'stores/store',\n  'actions/media-list',\n  'lib/utils'\n], ($, { SORTABLE_PROPERTIES }, VirtualDom, Store, { sortMediaList }, { capitalize }) => {\n\n  class Sorter extends VirtualDom.Component {\n\n    static defaultProps = {\n      sortBy: 'id',\n      sortDirection: 'asc',\n    };\n\n    componentDidUpdate() {\n      const $this = $(this.$dom);\n      $this.on('change', () => {\n        const sortBy = $this.find('#sort-property').val();\n        const sortDirection = $this.find('[name=\"sort-direction\"]:checked').val();\n        Store.dispatch(sortMediaList(sortBy, sortDirection));\n      });\n    }\n\n    shouldComponentUpdate() { return false; }\n\n    render() {\n      const { sortBy, sortDirection } = this.props;\n      const options = SORTABLE_PROPERTIES.map(item => (\n        <option value={item} selected={sortBy === item}>\n          {item.length <=2 ? item.toUpperCase() : capitalize(item)}\n        </option>\n      ));\n      return (\n        <form>\n          <h3>Sort</h3>\n          <select name=\"sort-property\" id=\"sort-property\">\n            {options}\n          </select>\n          <div class=\"sort-direction\">\n            <label>\n              <input\n                type=\"radio\"\n                name=\"sort-direction\"\n                value=\"asc\"\n                checked={sortDirection === 'asc'}\n              />\n              <i class=\"fa fa-chevron-up\" aria-hidden=\"true\" />\n            </label>\n            <label>\n              <input\n                type=\"radio\"\n                name=\"sort-direction\"\n                value=\"desc\"\n                checked={sortDirection === 'desc'}\n              />\n              <i class=\"fa fa-chevron-down\" aria-hidden=\"true\" />\n            </label>\n          </div>\n        </form>\n      );\n    }\n  }\n\n  return Sorter;\n});\n"]}